name: test

on:
  pull_request_target:
  push:
    branches:
      - main

jobs:
  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || 'main' }}
      - uses: chartboost/ruff-action@v1
  build:
    needs: [ruff]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          file: src/templates/rpc/Dockerfile_rpc
          context: .
          tags: bitcoindevproject/warnet-rpc:ci
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/warnet.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: warnet
          path: /tmp/warnet.tar
  test:
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        backend: [compose, k8s]
        test: [scenarios_test.py, rpc_test.py, graph_test.py, ln_test.py]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || 'main' }}
      - if: matrix.backend == 'compose'
        uses: ./.github/actions
      - if: matrix.backend == 'k8s'
        uses: medyagh/setup-minikube@master
        with:
          insecure-registry: 'localhost:5000,10.0.0.0/24'
          mount-path: ${{ github.workspace }}:/mnt/src
      - if: matrix.backend == 'k8s'
        name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: warnet
          path: /tmp
      - if: matrix.backend == 'k8s'
        name: Setup k8s
        run: |
          eval $(minikube -p minikube docker-env)
          docker load --input /tmp/warnet.tar
          docker image ls -a
          pip install --upgrade pip
          pip install -e .

          echo Patching warnet-rpc-statefulset-dev to use local registry
          sed -i "s|bitcoindevproject/warnet-rpc:dev|localhost:5000/bitcoindevproject/warnet-rpc:ci|g" src/templates/rpc/warnet-rpc-statefulset-dev.yaml
          cat src/templates/rpc/warnet-rpc-statefulset-dev.yaml

          echo Setting up k8s
          kubectl apply -f src/templates/rpc/namespace.yaml
          kubectl apply -f src/templates/rpc/rbac-config.yaml
          kubectl apply -f src/templates/rpc/warnet-rpc-service.yaml
          kubectl apply -f src/templates/rpc/warnet-rpc-statefulset-dev.yaml
          kubectl config set-context --current --namespace=warnet

          echo Waiting for rpc-0 to come online
          until kubectl get pod rpc-0 --namespace=warnet; do
             echo "Waiting for server to find pod rpc-0..."
             sleep 4
          done
          kubectl wait --for=condition=Ready --timeout=2m pod rpc-0
          kubectl port-forward svc/rpc 9276:9276 &
      - name: Run tests
        run: ./test/${{matrix.test}} ${{matrix.backend}}
  # build:
  #   needs: [deploy, test]
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       backend: [compose]
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         ref: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || 'main' }}
  #     - uses: ./.github/actions
  #     - if: matrix.backend == 'k8s'
  #       uses: extractions/setup-just@v1
  #     - if: matrix.backend == 'k8s'
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: image-tags-${{ github.sha }}
  #     - if: matrix.backend == 'k8s'
  #       uses: medyagh/setup-minikube@master
  #     - if: matrix.backend == 'k8s'
  #       run: |
  #         tagname=$(cat tagname.txt)
  #         echo "Using tagname: $tagname"
  #         eval $(minikube docker-env)
  #         pip install --upgrade pip
  #         pip install -e .
  #         sed -i "s|bitcoindevproject/warnet-rpc:dev|$tagname|g" src/templates/rpc/warnet-rpc-statefulset-dev.yaml
  #         just start
  #         kubectl wait --for=condition=Ready --timeout=2m pod rpc-0
  #         kubectl port-forward svc/rpc 9276:9276 &
  #     - run: ./test/build_branch_test.py ${{matrix.backend}}
